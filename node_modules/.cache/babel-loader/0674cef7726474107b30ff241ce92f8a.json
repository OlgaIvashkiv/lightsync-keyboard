{"ast":null,"code":"var _jsxFileName = \"/Users/Olga/Downloads/lightsync-keyboard/src/components/GroupF/GroupF.js\";\nimport React from \"react\";\nimport uniqid from 'uniqid';\nimport GroupFItem from \"./GroupFItem\";\nimport { StyledGroupNumber } from '../GroupNumber/StyledGroupNumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arrayF = ['f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'f10', 'f11', 'f12'];\n\nconst GroupF = ({\n  color\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledGroupNumber, {\n    children: arrayF.map((item, index) => /*#__PURE__*/_jsxDEV(GroupFItem, {\n      item: item,\n      id: uniqid(),\n      color: color\n    }, `${item}__${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 43\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GroupF;\nexport default GroupF;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupF\");","map":{"version":3,"sources":["/Users/Olga/Downloads/lightsync-keyboard/src/components/GroupF/GroupF.js"],"names":["React","uniqid","GroupFItem","StyledGroupNumber","arrayF","GroupF","color","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;AAEA,MAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,KAAvD,EAA8D,KAA9D,EAAqE,KAArE,CAAf;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAE1B,sBACI,QAAC,iBAAD;AAAA,cACKF,MAAM,CAACG,GAAP,CAAY,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAkD,MAAA,EAAE,EAAEP,MAAM,EAA5D;AAAgE,MAAA,KAAK,EAAGK;AAAxE,OAA8B,GAAEE,IAAK,KAAIC,KAAM,EAA/C;AAAA;AAAA;AAAA;AAAA,YAA7B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;KAAMJ,M;AASN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport uniqid from 'uniqid';\nimport GroupFItem from \"./GroupFItem\";\nimport { StyledGroupNumber } from '../GroupNumber/StyledGroupNumber';\n\nconst arrayF = ['f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'f10', 'f11', 'f12' ]\nconst GroupF = ({ color }) => {\n\n    return (\n        <StyledGroupNumber>\n            {arrayF.map( (item, index) => <GroupFItem item={item} key={`${item}__${index}`} id={uniqid()} color={ color }/>)}\n        </StyledGroupNumber>\n    )\n}\n\nexport default GroupF;"]},"metadata":{},"sourceType":"module"}